pipeline
{
  agent any
  tools{
    maven 'Maven'
  }
  stages{
    stage('Clean Workspace') {
            steps {
                deleteDir()
            }
      }
    stage ('Initialize') {
      steps{
        sh '''
              echo "PATH =${PATH}"
              echo "M2_HOME =${M2_HOME}"
           '''
        
      }
    }
  stage('Retrieve Source Code') {
            steps {
                git branch: 'master', url: 'https://github.com/chand-infosec/webapp.git'
            }
  }
  stage ('Check Git Secrets') {
      steps{
        sh 'docker pull gesellix/trufflehog'
        sh 'rm trufflehog || true'
        sh 'docker run gesellix/trufflehog --json https://github.com/chand-infosec/webapp.git > trufflehog'     
        sh 'cat trufflehog'
      }
    }

  stage ('Source Composition Analysis') {
      steps {
         sh 'rm owasp* || true'
         sh 'wget "https://raw.githubusercontent.com/cehkunal/webapp/master/owasp-dependency-check.sh" '
         sh 'chmod +x owasp-dependency-check.sh'
         sh 'bash owasp-dependency-check.sh'
         sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'        
      }
    }

  stage ('Build') {
      steps{
        sh 'mvn clean package'        
      }
    }
  stage('Deploy to tomcat') {
            steps {              
               sshagent(credentials: ['tomcat']) {
                sh 'scp -o StrictHostKeyChecking=no target/*.*ar jenkinsdevsecops@34.125.188.8:/home/jenkinsdevsecops/prod/tomcat/webapps/webapp.war'
          }
      }
  }

  }
}
